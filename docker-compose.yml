version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: expense_management_db
    restart: always
    environment:
      POSTGRES_DB: expense_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - expense_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d expense_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expense_management_app
    restart: always
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: expense_management
      DB_SSLMODE: disable
      
      # Application configuration
      APP_PORT: 8080
      APP_ENV: production
      
      # JWT Configuration
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRY: 24h
      
      LOG_LEVEL: info
      
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - expense_network
    volumes:
      - ./config.yml:/root/config.yml:ro
    command: ["./docker-entrypoint.sh"]

networks:
  expense_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
