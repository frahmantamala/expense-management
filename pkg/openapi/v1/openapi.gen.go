// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
	"github.com/getkin/kin-openapi/openapi3"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for ExpenseExpenseStatus.
const (
	ExpenseExpenseStatusApproved        ExpenseExpenseStatus = "approved"
	ExpenseExpenseStatusPendingApproval ExpenseExpenseStatus = "pending_approval"
	ExpenseExpenseStatusRejected        ExpenseExpenseStatus = "rejected"
)

// Defines values for ExpenseCreateCategory.
const (
	Akomodasi  ExpenseCreateCategory = "akomodasi"
	BahanBakar ExpenseCreateCategory = "bahan_bakar"
	Kantor     ExpenseCreateCategory = "kantor"
	Kesehatan  ExpenseCreateCategory = "kesehatan"
	Komunikasi ExpenseCreateCategory = "komunikasi"
	LainLain   ExpenseCreateCategory = "lain_lain"
	Liburan    ExpenseCreateCategory = "liburan"
	Makan      ExpenseCreateCategory = "makan"
	Pelatihan  ExpenseCreateCategory = "pelatihan"
	Pemasaran  ExpenseCreateCategory = "pemasaran"
	Perjalanan ExpenseCreateCategory = "perjalanan"
	Software   ExpenseCreateCategory = "software"
)

// Defines values for RejectExpenseJSONBodyStatus.
const (
	RejectExpenseJSONBodyStatusRejected RejectExpenseJSONBodyStatus = "rejected"
)

// ApprovalRequest defines model for ApprovalRequest.
type ApprovalRequest struct {
	Notes *string `json:"notes,omitempty"`
}

// AuthRequest defines model for AuthRequest.
type AuthRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// AuthResponse defines model for AuthResponse.
type AuthResponse struct {
	AccessToken  *string `json:"access_token,omitempty"`
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// ComponentStatus defines model for ComponentStatus.
type ComponentStatus struct {
	CheckedAt  *time.Time `json:"checked_at,omitempty"`
	DurationMs *int       `json:"duration_ms,omitempty"`
	Status     *string    `json:"status,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Code    *int    `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// Expense defines model for Expense.
type Expense struct {
	// AmountIdr Amount in Indonesian Rupiah
	AmountIdr *int `json:"amount_idr,omitempty"`

	// Category Expense category
	Category *string `json:"category,omitempty"`

	// CreatedAt When the record was created
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description Expense description
	Description *string `json:"description,omitempty"`

	// ExpenseDate Date when the expense occurred
	ExpenseDate *time.Time `json:"expense_date,omitempty"`

	// ExpenseStatus Current status of the expense
	ExpenseStatus *ExpenseExpenseStatus `json:"expense_status,omitempty"`

	// Id Unique expense ID
	Id *int `json:"id,omitempty"`

	// ProcessedAt When the expense was processed (approved/rejected)
	ProcessedAt *time.Time `json:"processed_at"`

	// SubmittedAt When the expense was submitted
	SubmittedAt *time.Time `json:"submitted_at,omitempty"`

	// UpdatedAt When the record was last updated
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// UserId ID of user who created the expense
	UserId *int `json:"user_id,omitempty"`
}

// ExpenseExpenseStatus Current status of the expense
type ExpenseExpenseStatus string

// ExpenseCreate defines model for ExpenseCreate.
type ExpenseCreate struct {
	// AmountIdr Amount in Indonesian Rupiah
	AmountIdr int `json:"amount_idr"`

	// Category Expense category
	Category ExpenseCreateCategory `json:"category"`

	// Description Expense description
	Description string `json:"description"`

	// ExpenseDate Date when the expense occurred
	ExpenseDate time.Time `json:"expense_date"`
}

// ExpenseCreateCategory Expense category
type ExpenseCreateCategory string

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	CheckedAt  *time.Time                  `json:"checked_at,omitempty"`
	Components *map[string]ComponentStatus `json:"components,omitempty"`
	Status     *string                     `json:"status,omitempty"`
}

// PagedExpenses defines model for PagedExpenses.
type PagedExpenses struct {
	Items   *[]Expense `json:"items,omitempty"`
	Page    *int       `json:"page,omitempty"`
	PerPage *int       `json:"per_page,omitempty"`
	Total   *int       `json:"total,omitempty"`
}

// PaymentRetryRequest defines model for PaymentRetryRequest.
type PaymentRetryRequest struct {
	ExternalId *string `json:"external_id,omitempty"`
}

// User defines model for User.
type User struct {
	Department  *string   `json:"department,omitempty"`
	Email       *string   `json:"email,omitempty"`
	Id          *int      `json:"id,omitempty"`
	IsActive    *bool     `json:"is_active,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Permissions *[]string `json:"permissions,omitempty"`
}

// AuthRefreshJSONBody defines parameters for AuthRefresh.
type AuthRefreshJSONBody struct {
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// ListExpensesParams defines parameters for ListExpenses.
type ListExpensesParams struct {
	Page     *int    `form:"page,omitempty" json:"page,omitempty"`
	PerPage  *int    `form:"per_page,omitempty" json:"per_page,omitempty"`
	Status   *string `form:"status,omitempty" json:"status,omitempty"`
	Category *string `form:"category,omitempty" json:"category,omitempty"`
}

// GetPendingApprovalsParams defines parameters for GetPendingApprovals.
type GetPendingApprovalsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// UploadReceiptMultipartBody defines parameters for UploadReceipt.
type UploadReceiptMultipartBody struct {
	Receipt *openapi_types.File `json:"receipt,omitempty"`
}

// RejectExpenseJSONBody defines parameters for RejectExpense.
type RejectExpenseJSONBody struct {
	Reason string                       `json:"reason"`
	Status *RejectExpenseJSONBodyStatus `json:"status,omitempty"`
}

// RejectExpenseJSONBodyStatus defines parameters for RejectExpense.
type RejectExpenseJSONBodyStatus string

// AuthLoginJSONRequestBody defines body for AuthLogin for application/json ContentType.
type AuthLoginJSONRequestBody = AuthRequest

// AuthRefreshJSONRequestBody defines body for AuthRefresh for application/json ContentType.
type AuthRefreshJSONRequestBody AuthRefreshJSONBody

// CreateExpenseJSONRequestBody defines body for CreateExpense for application/json ContentType.
type CreateExpenseJSONRequestBody = ExpenseCreate

// ApproveExpenseJSONRequestBody defines body for ApproveExpense for application/json ContentType.
type ApproveExpenseJSONRequestBody = ApprovalRequest

// RetryPaymentJSONRequestBody defines body for RetryPayment for application/json ContentType.
type RetryPaymentJSONRequestBody = PaymentRetryRequest

// UploadReceiptMultipartRequestBody defines body for UploadReceipt for multipart/form-data ContentType.
type UploadReceiptMultipartRequestBody UploadReceiptMultipartBody

// RejectExpenseJSONRequestBody defines body for RejectExpense for application/json ContentType.
type RejectExpenseJSONRequestBody RejectExpenseJSONBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xae2/bOBL/KgTv/tjFObGcJtuL/+tr93LoAkXaYoErAmMsji3WEqnykcQo/N0PJCVZ",
	"sinH3sRFFtjForCk4XCev5kh852msiilQGE0HX+nOs2wAP/zVVkqeQv5NX6zqI17VSpZojIcPYGQJvww",
	"yxLpmGqjuJjT1WpQv5HTr5gauhrQV9ZkvYywAJ5HGA1oCVrfScXiuyj8ZrlCRsdfKh6tFTe9UuhSCo3b",
	"YkCaotYTIxcootIonCnUWS9FTPE3tXk/GjBWb++aZpgukE3AGwbvoShzx+IsObs4SS5PRsmnsxfji4vx",
	"6Ox09O+Ly4uX/0pejpOEDuhMqsItowwMnhheIB1sS82sAsOlmBS6s0PS0HJhcI7KEetGyrUkGUJusuU2",
	"75i+75SSqt/GqWTYslxr5wK1hjnuadZ39yXGnVhIK8yEM+WeGOpU8dKpT8f0lf9GuCBXgkmBmoMg17bk",
	"kNHBWuGLJEmixknB4Fyq5TbnShzSULTY0QIWIGKeSRWCaVzf5fhHhoKYDInCVCpG7kCTir7DvAmT0afR",
	"5fj85fj88vSXXy4PjZH23n3Ktd+2Rfjd6UecMeeEoZiDIIucY1RlDLwmTprtnd6CQXJXa17REpmmVql+",
	"vZNk7P//397q1lKso70rxxu3nzAkfCdy1pbHiSFs4UCnRMG4mE+ggko6oOGnF1ahi1b0ULQWvEWwJRdn",
	"27J8FvybXRvj6m3bDKNYmJZKOiB7KLBqji6ymiXkp1q+YS3+z4+PN2HzHKZuvVEWI4prOy24MYeI3Cw5",
	"QjrYkh2UmDloQ6pFxxBHo5rEYuPqrYtN95ncZbLGh81graU52w6WHdD6xjM7JsAWcM8Ll0iX9X8DWnAR",
	"3o0eD8BNkqqvkIPwGFxj8QKEkcr1C67dAeVflpiD4VkgkIUVfAGa0wHVcmbuQDlrLlBjBsbTwEIWkgWS",
	"KWQgJlNYgOOa86kNPHPgYuL+6aJAb004FhIXcP8exdxk3vze0PXz6Jni9EaH1wq8rplacbEheKwH/I/v",
	"ZnZ0KMfux7oNNzDGnRaQf+iI8U+FMzqm/xiuyYdVcz7c7CljWfzoRu4DzJFVARdpW7nBovtjl8R1u7be",
	"CJSCZWjx5z0dYYlq0v/VSAN57FNcmWWBwlyjUcv+MeTeoBKQV1C7h40+a1TbfBiWoIzbLzpF9E87nX1b",
	"qnI9gdTw27YlplLmCMJ9FlBgfHpCVXCtuRTdQPhCUxBV04I+fcQkVPvmAdikriA3g7WPt7boenPbRi4S",
	"MbWKm+VHFwvBQq8RFCo3jbmnqX/6tU6e//7xyUGup3aK+q/rmM2MKenKMeZiJr1Q3PjwrtHxdxAwR2d/",
	"8urDFR3QW1Q6ANfoNDlNnNyyRAElp2P64jQ5feEHR5N54YZgTTbM5Zx7BC5liBXnYT9HXTFX6azJ3nuS",
	"AFKozWvJlmHEEabyPZRlzlO/avhVB0QPKfFQwrTn5VUXCV0L5V8EBPMynyXJE29dwaPfuwv+fvrVwbW2",
	"KMCVY58JJNjMfWhsKK150IiOZkuf8+2qk8v5HBlx5O24ouMv3Yj6crO6actWbbGWq5rjdwt2XRH9ef92",
	"UeHww4Pn5XaBdyTq+spQ4WOwMrbKxhwjBn7PtWlqi8s9BQUaVNo70yUe/WbRF/SAbqFMDFq6MJyBzU20",
	"U1wNepjUFSXK6CzZn1NVXtt8tvwZX9nqVfrX3hzR0d3CHvG0sxA7MMW4NqTxuis90bwKM8W7ZjQ5BnJ2",
	"x5e9kmj01JvHrFof3hxk149+yG2GuU5yDavTh94k+w3Nh0BSH+XumWs5L7jpz5FmbhslB2SMnM009nCN",
	"sXlsCmz2dmtEemzHGswT7dQqJffqSiOJF7zVSaTz5MXTRWfnbDYiwK9STTljKMgJKXwXpUg4FSdNDh0U",
	"v7+hIbVW9SFZox75qd5Dinz580Z0f+dstSu01ygSi2jXza1jjzO6iQIR9H262PuTEIHNeG+A5/pwU8dx",
	"wllyWHf7LjPApFmk6QkUR7frEZrljZuqVYX6T4YesWG6/xx3n1RvVvsUT35cir8GRlRtp+cIL06m8x8n",
	"Uz00CmnITFpxIMBVSbMr88pw9jBUaMLJZbw38mcT1TnFXyn5Ykcr/Qm42Wn6tcSZhh9aW/yOpGIRM7zC",
	"FHm5Y/78XOYS2HVF9sNtXtjc8BKUGc6kKk4YGNg9QDbqNAeNUy5ALfeFoL2Gya6HrDfRoa4JhiW1xFHf",
	"eLH6q9G1J3imxWjTMVBRrKvDldB2NuMpd+HNZGpdkHp2xAEGZ/ELwFahqW4v4peIzduHDs0r2W5+wOHC",
	"wyVzp9QPlsxm9d8l8y9dMkNmdytmuJnobffDnQ09Yle+cSsU0VouNs69whLi74uCFlaj0sNwGN83tlR/",
	"WuBvDo6oj+cf0cLqahg9aK5Iq7+HsA1Xjeq2xmKrcjqmQyj58HZEVzer/wcAAP//MFZEXFUmAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
